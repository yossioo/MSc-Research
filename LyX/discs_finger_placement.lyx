#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{algorithm,algpseudocode}
%\usepackage[]{algorithm2e}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
2 discs in a plane: 4DOF total
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm}[H]  
\end_layout

\begin_layout Plain Layout


\backslash
KwData{this text}  
\end_layout

\begin_layout Plain Layout


\backslash
KwResult{how to write algorithm with 
\backslash
LaTeX2e }  initialization
\backslash
;  
\end_layout

\begin_layout Plain Layout


\backslash
While{not at end of this document}{   
\end_layout

\begin_layout Plain Layout

read current
\backslash
;   
\end_layout

\begin_layout Plain Layout


\backslash
eIf{understand}{    
\end_layout

\begin_layout Plain Layout

go to next section
\backslash
;    
\end_layout

\begin_layout Plain Layout

current section becomes this one
\backslash
;    
\end_layout

\begin_layout Plain Layout

}{    
\end_layout

\begin_layout Plain Layout

go back to the beginning of current section
\backslash
;  
\end_layout

\begin_layout Plain Layout

}  } 
\end_layout

\begin_layout Plain Layout


\backslash
caption{How to write algorithms} 
\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithmic} 
\end_layout

\begin_layout Plain Layout


\backslash
Function{Increment}{$a$}     
\backslash
State $a 
\backslash
gets a+1$     
\backslash
State 
\backslash
Return $a$ 
\backslash
EndFunction
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
If {$i
\backslash
geq maxval$}     
\end_layout

\begin_layout Plain Layout


\backslash
State $i
\backslash
gets 0$ 
\end_layout

\begin_layout Plain Layout


\backslash
Else     
\end_layout

\begin_layout Plain Layout


\backslash
If {$i+k
\backslash
leq maxval$}         
\end_layout

\begin_layout Plain Layout


\backslash
State $i
\backslash
gets i+k$     
\end_layout

\begin_layout Plain Layout


\backslash
EndIf 
\end_layout

\begin_layout Plain Layout


\backslash
EndIf 
\end_layout

\begin_layout Plain Layout


\backslash
State 
\backslash
Return $i$
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithmic}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
2 Discs grab
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithmic}[1] 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
Require{$
\backslash
rho 
\backslash
geq 1$} 
\end_layout

\begin_layout Plain Layout


\backslash
Ensure{$X_k$} 
\end_layout

\begin_layout Plain Layout


\backslash
While{not converged} 
\end_layout

\begin_layout Plain Layout


\backslash
State{Solve $X_{k+1}=
\backslash
min_{X} L(X,Y_k, 
\backslash
mu_k)$} 
\end_layout

\begin_layout Plain Layout


\backslash
State{$Y_{k+1}=Y_k+
\backslash
mu_k h(X_{k+1})$} 
\end_layout

\begin_layout Plain Layout


\backslash
State{$
\backslash
mu_{k+1}=
\backslash
rho 
\backslash
mu_k$} 
\end_layout

\begin_layout Plain Layout


\backslash
EndWhile 
\end_layout

\begin_layout Plain Layout


\backslash
ForAll{<condition>} 
\end_layout

\begin_layout Plain Layout


\backslash
State{<text>} 
\end_layout

\begin_layout Plain Layout


\backslash
While{not converged} 
\end_layout

\begin_layout Plain Layout


\backslash
State{Solve $X_{k+1}=
\backslash
min_{X} L(X,Y_k, 
\backslash
mu_k)$} 
\end_layout

\begin_layout Plain Layout


\backslash
State{$Y_{k+1}=Y_k+
\backslash
mu_k h(X_{k+1})$} 
\end_layout

\begin_layout Plain Layout


\backslash
State{$
\backslash
mu_{k+1}=
\backslash
rho 
\backslash
mu_k$} 
\end_layout

\begin_layout Plain Layout


\backslash
EndWhile 
\end_layout

\begin_layout Plain Layout


\backslash
EndFor
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithmic}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
